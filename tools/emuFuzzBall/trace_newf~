/tmp/fuzzball-output
 /home/yanxx297/Project/nsf-EmuVerify/tools/WhiteBochs-old/fuzzball-whitebochs /home/yanxx297/Project/nsf-EmuVerify/base.snap \x00\x00 
Now in run-emu-fuzzball.py. Performing dry run...
['/home/yanxx297/Project/nsf-EmuVerify/tools/WhiteBochs-old/fuzzball-whitebochs', '/home/yanxx297/Project/nsf-EmuVerify/base.snap', '\\x00\\x00']
done (0.007s)
protected mode activated
page walk for address 0x00208040
page walk for address 0x00208048
page walk for address 0x00208048
page walk for address 0x00208048
page walk for address 0x00208048
page walk for address 0x00208050
page walk for address 0x00208008
page walk for address 0x002080c8
FUZZBALL_IGNORE_PATH_THROUGH	0x8048e68
FUZZBALL_EMULATOR	BOCHS
FUZZBALL_REG	reg_EAX	4	0x819ded8
FUZZBALL_REG	reg_EBX	4	0x819dee4
FUZZBALL_REG	reg_ECX	4	0x819dedc
FUZZBALL_REG	reg_EDX	4	0x819dee0
FUZZBALL_REG	reg_ESP	4	0x819dee8
FUZZBALL_REG	reg_EBP	4	0x819deec
FUZZBALL_REG	reg_ESI	4	0x819def0
FUZZBALL_REG	reg_EDI	4	0x819def4
FUZZBALL_REG	reg_EIP	4	0x819def8
FUZZBALL_REG	reg_EFLAGS	4	0x819df04
FUZZBALL_REG	sreg_CS	6	0x819df5c
FUZZBALL_REG	sreg_DS	6	0x819dfbc
FUZZBALL_REG	sreg_ES	6	0x819df2c
FUZZBALL_REG	sreg_FS	6	0x819dfec
FUZZBALL_REG	sreg_GS	6	0x819e01c
FUZZBALL_REG	sreg_SS	6	0x819df8c
FUZZBALL_DESC	desc_CS	40	0x819df64	8
FUZZBALL_DESC	desc_DS	40	0x819dfc4	9
FUZZBALL_DESC	desc_ES	40	0x819df34	9
FUZZBALL_DESC	desc_FS	40	0x819dff4	9
FUZZBALL_DESC	desc_GS	40	0x819e024	9
FUZZBALL_DESC	desc_SS	40	0x819df94	10
FUZZBALL_GDTR	4	0x819e04c	2	0x819e050
FUZZBALL_IDTR	4	0x819e054	2	0x819e058
FUZZBALL_TR	2	0x819e08c
FUZZBALL_DESC	desc_TR	40	0x819e094	8
FUZZBALL_LDTR	2	0x819e05c
FUZZBALL_REG	creg_CR0	4	0x819e0d4
FUZZBALL_REG	creg_CR2	4	0x819e0d8
FUZZBALL_REG	creg_CR3	4	0x819e0dc
FUZZBALL_REG	creg_CR4	4	0x819e0e0
FUZZBALL_REG	dreg_DR0	4	0x819e0bc
FUZZBALL_REG	dreg_DR1	4	0x819e0c0
FUZZBALL_REG	dreg_DR2	4	0x819e0c4
FUZZBALL_REG	dreg_DR3	4	0x819e0c8
FUZZBALL_REG	dreg_DR6	4	0x819e0cc
FUZZBALL_REG	dreg_DR7	4	0x819e0d0
FUZZBALL_FPU	0x81a20f4	120
FUZZBALL_GET_TLS	0x8048e54
FUZZBALL_MEM	0x70000000	4194304
FUZZBALL_SCRATCHPAD	0x8427680	8192
FUZZBALL_SNAPSHOT	/home/yanxx297/Project/nsf-EmuVerify/base.snap
FUZZBALL_EXCEPTION	0x818e0c8
FUZZBALL_EXCEPTION_HANDLER	0x806912a	1
FUZZBALL_WRITE_VIRTUAL_MEM	0x804c832	2
FUZZBALL_WRITE_VIRTUAL_MEM	0x804c9ce	2
FUZZBALL_WRITE_VIRTUAL_MEM	0x804cc0e	2
FUZZBALL_WRITE_VIRTUAL_MEM	0x804ce4a	2
FUZZBALL_READ_VIRTUAL_MEM	0x804d092	2
FUZZBALL_READ_VIRTUAL_MEM	0x804d234	2
FUZZBALL_READ_VIRTUAL_MEM	0x804d47a	2
FUZZBALL_READ_VIRTUAL_MEM	0x804d90c	2
FUZZBALL_READ_VIRTUAL_MEM	0x804db52	2
FUZZBALL_READ_VIRTUAL_MEM	0x804dd98	2
FUZZBALL_READ_VIRTUAL_MEM	0x804dd98	2
FUZZBALL_MSRS	0x819e0f4	16384
FUZZBALL_METAINFO1	0x842764f	1	\x18
FUZZBALL_METADATA	0x8427650	8	\x03\x00\x00\x0a\x00\x09\x00\x00
FUZZBALL_IGNORE_CALL	fprintf	0x80bcb80	0
FUZZBALL_SHELLCODE	\x00\x00
FUZZBALL_COREDUMP_ADDRESS	0x8048f22
FUZZBALL_START_ADDRESS	0x8048ed4
FUZZBALL_IGNORE_PATHCOND_TILL	0x8048efb
FUZZBALL_START_TRACING	0x8048ead

Generating core dump...08048f22: push   %ebp
08048f23: mov    %esp,%ebp
08048f25: sub    $0x18,%esp
08048f28: movzbl 0x8429681,%eax
08048f2f: test   %al,%al
08048f31: je     0x0000000008048f47
08048f47: leave  
08048f48: ret    
0804a4a5: call   0x000000000804a5f7
0804a5f7: push   %ebp
0804a5f8: mov    %esp,%ebp
0804a5fa: mov    0x4(%ebp),%eax
0804a5fd: sub    $0x1,%eax
0804a600: pop    %ebp
0804a601: ret    
0804a4aa: mov    %eax,(%esp)
0804a4ad: call   0x0000000008048ed4
Iteration 1:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5dc: mov    $0x0,%eax
0807a5e1: jmp    0x000000000807a6c7
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db30: mov    0x8(%ebp),%eax
0804db33: mov    %eax,(%esp)
0804db36: call   0x000000000807a968
0807a968: push   %ebp
0807a969: mov    %esp,%ebp
0807a96b: cmpl   $0x2,0x8(%ebp)
0807a96f: jne    0x000000000807a978
0807a978: mov    $0xd,%eax
0807a97d: pop    %ebp
0807a97e: ret    
0804db3b: movl   $0x0,0x4(%esp)
0804db43: mov    %eax,(%esp)
0804db46: call   0x000000000806912a
0806912a: push   %ebp
At 0x0806912a, mem_70[0x818e0c8:reg32_t]:reg32_t is already concrete, hardcoding to 0xd
At 0x0806912a, simulating exit
PATH COMPLETED (iteration:0, eip:0806912a, instructions:920 time:0.807s outdir:/tmp/fuzzball-output/00000000)
Path: 11
Bit 0 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Bit 1 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 3 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Bit 4 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Bit 7 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_0020804d_I5CFIXZZL44F6NIz_1_0): 0x08 vs. 0x93 --> 0x8a
********************************************************************************

Iteration 2:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5e6: mov    0x8(%ebp),%eax
0807a5e9: mov    0xc(%eax),%eax
0807a5ec: test   %eax,%eax
0807a5ee: jne    0x000000000807a5fa
0807a5f0: mov    $0x0,%eax
0807a5f5: jmp    0x000000000807a6c7
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db30: mov    0x8(%ebp),%eax
0804db33: mov    %eax,(%esp)
0804db36: call   0x000000000807a968
0807a968: push   %ebp
0807a969: mov    %esp,%ebp
0807a96b: cmpl   $0x2,0x8(%ebp)
0807a96f: jne    0x000000000807a978
0807a978: mov    $0xd,%eax
0807a97d: pop    %ebp
0807a97e: ret    
0804db3b: movl   $0x0,0x4(%esp)
0804db43: mov    %eax,(%esp)
0804db46: call   0x000000000806912a
0806912a: push   %ebp
At 0x0806912a, mem_70[0x818e0c8:reg32_t]:reg32_t is already concrete, hardcoding to 0xd
At 0x0806912a, simulating exit
PATH COMPLETED (iteration:1, eip:0806912a, instructions:924 time:0.080s outdir:/tmp/fuzzball-output/00000001)
Path: 101
Bit 0 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 2 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 3 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 4 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 7 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Relevance analysis (in_mem_0020804d_I5CFIXZZL44F6NIz_1_0): 0x0e vs. 0x93 --> 0x13
********************************************************************************

Iteration 3:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5e6: mov    0x8(%ebp),%eax
0807a5e9: mov    0xc(%eax),%eax
0807a5ec: test   %eax,%eax
0807a5ee: jne    0x000000000807a5fa
0807a5fa: mov    0x8(%ebp),%eax
0807a5fd: movzbl 0x18(%eax),%eax
0807a601: movzbl %al,%eax
0807a604: cmp    $0x5,%eax
0807a607: jg     0x000000000807a61d
0807a61d: cmp    $0x7,%eax
0807a620: jle    0x000000000807a67b
0807a622: cmp    $0xf,%eax
0807a625: jg     0x000000000807a6c2
0807a62b: mov    $0x0,%eax
0807a630: jmp    0x000000000807a6c7
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db30: mov    0x8(%ebp),%eax
0804db33: mov    %eax,(%esp)
0804db36: call   0x000000000807a968
0807a968: push   %ebp
0807a969: mov    %esp,%ebp
0807a96b: cmpl   $0x2,0x8(%ebp)
0807a96f: jne    0x000000000807a978
0807a978: mov    $0xd,%eax
0807a97d: pop    %ebp
0807a97e: ret    
0804db3b: movl   $0x0,0x4(%esp)
0804db43: mov    %eax,(%esp)
0804db46: call   0x000000000806912a
0806912a: push   %ebp
At 0x0806912a, mem_70[0x818e0c8:reg32_t]:reg32_t is already concrete, hardcoding to 0xd
At 0x0806912a, simulating exit
PATH COMPLETED (iteration:2, eip:0806912a, instructions:933 time:0.107s outdir:/tmp/fuzzball-output/00000002)
Path: 100001
Bit 0 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 2 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 3 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Bit 4 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_0020804d_I5CFIXZZL44F6NIz_1_0): 0x8e vs. 0x93 --> 0x9b
********************************************************************************

Iteration 4:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5e6: mov    0x8(%ebp),%eax
0807a5e9: mov    0xc(%eax),%eax
0807a5ec: test   %eax,%eax
0807a5ee: jne    0x000000000807a5fa
0807a5fa: mov    0x8(%ebp),%eax
0807a5fd: movzbl 0x18(%eax),%eax
0807a601: movzbl %al,%eax
0807a604: cmp    $0x5,%eax
0807a607: jg     0x000000000807a61d
0807a609: cmp    $0x4,%eax
0807a60c: jge    0x000000000807a62b
0807a60e: test   %eax,%eax
0807a610: js     0x000000000807a6c2
0807a616: cmp    $0x1,%eax
0807a619: jle    0x000000000807a62b
0807a62b: mov    $0x0,%eax
0807a630: jmp    0x000000000807a6c7
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db30: mov    0x8(%ebp),%eax
0804db33: mov    %eax,(%esp)
0804db36: call   0x000000000807a968
0807a968: push   %ebp
0807a969: mov    %esp,%ebp
0807a96b: cmpl   $0x2,0x8(%ebp)
0807a96f: jne    0x000000000807a978
0807a978: mov    $0xd,%eax
0807a97d: pop    %ebp
0807a97e: ret    
0804db3b: movl   $0x0,0x4(%esp)
0804db43: mov    %eax,(%esp)
0804db46: call   0x000000000806912a
0806912a: push   %ebp
At 0x0806912a, mem_70[0x818e0c8:reg32_t]:reg32_t is already concrete, hardcoding to 0xd
At 0x0806912a, simulating exit
PATH COMPLETED (iteration:3, eip:0806912a, instructions:935 time:0.103s outdir:/tmp/fuzzball-output/00000003)
Path: 100111
Bit 0 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 1 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 2 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 3 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 6 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_0020804e_I5CFIXZZL44F6NQz_1_0): 0x80 vs. 0xcf --> 0xcf
Bit 0 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 1 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Relevance analysis (in_mem_0020804d_I5CFIXZZL44F6NIz_1_0): 0x90 vs. 0x93 --> 0x91
********************************************************************************

Iteration 5:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5e6: mov    0x8(%ebp),%eax
0807a5e9: mov    0xc(%eax),%eax
0807a5ec: test   %eax,%eax
0807a5ee: jne    0x000000000807a5fa
0807a5fa: mov    0x8(%ebp),%eax
0807a5fd: movzbl 0x18(%eax),%eax
0807a601: movzbl %al,%eax
0807a604: cmp    $0x5,%eax
0807a607: jg     0x000000000807a61d
0807a61d: cmp    $0x7,%eax
0807a620: jle    0x000000000807a67b
0807a67b: mov    0x8(%ebp),%eax
0807a67e: mov    0x28(%eax),%eax
0807a681: test   %eax,%eax
0807a683: je     0x000000000807a68e
0807a685: movl   $0xffffffff,-0x4(%ebp)
0807a68c: jmp    0x000000000807a695
0807a695: mov    0x8(%ebp),%eax
0807a698: mov    0x20(%eax),%eax
0807a69b: cmp    0xc(%ebp),%eax
0807a69e: jae    0x000000000807a6ba
0807a6a0: mov    0xc(%ebp),%eax
0807a6a3: cmp    -0x4(%ebp),%eax
0807a6a6: ja     0x000000000807a6ba
0807a6a8: mov    0xc(%ebp),%eax
0807a6ab: mov    -0x4(%ebp),%edx
0807a6ae: sub    %eax,%edx
0807a6b0: mov    0x10(%ebp),%eax
0807a6b3: sub    $0x1,%eax
0807a6b6: cmp    %eax,%edx
0807a6b8: jae    0x000000000807a6c1
0807a6c1: nop
0807a6c2: mov    $0x1,%eax
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db4b: jmp    0x000000000804d997
0804d997: mov    0xc(%ebp),%eax
0804d99a: mov    %eax,0x4(%esp)
0804d99e: mov    0x8(%ebp),%eax
0804d9a1: mov    %eax,(%esp)
0804d9a4: call   0x000000000804eb04
0804eb04: push   %ebp
0804eb05: mov    %esp,%ebp
0804eb07: mov    0x8(%ebp),%edx
0804eb0a: mov    %edx,%eax
0804eb0c: add    %eax,%eax
0804eb0e: add    %edx,%eax
0804eb10: shl    $0x4,%eax
0804eb13: add    $0x819df30,%eax
0804eb18: mov    0x18(%eax),%edx
0804eb1b: mov    0xc(%ebp),%eax
0804eb1e: add    %edx,%eax
0804eb20: pop    %ebp
0804eb21: ret    
0804d9a9: mov    %eax,-0x24(%ebp)
0804d9ac: mov    -0x24(%ebp),%eax
0804d9af: and    $0x3ff000,%eax
0804d9b4: shr    $0xc,%eax
0804d9b7: mov    %eax,-0x20(%ebp)
0804d9ba: mov    -0x24(%ebp),%eax
0804d9bd: and    $0xfffff000,%eax
0804d9c2: mov    %eax,-0x1c(%ebp)
0804d9c5: mov    -0x20(%ebp),%edx
0804d9c8: mov    %edx,%eax
0804d9ca: shl    $0x2,%eax
0804d9cd: add    %edx,%eax
0804d9cf: shl    $0x2,%eax
0804d9d2: add    $0x4880,%eax
0804d9d7: add    $0x819dd60,%eax
0804d9dc: mov    %eax,-0x18(%ebp)
0804d9df: mov    -0x18(%ebp),%eax
0804d9e2: mov    (%eax),%eax
0804d9e4: cmp    -0x1c(%ebp),%eax
0804d9e7: jne    0x000000000804da4d
0804d9e9: mov    -0x18(%ebp),%eax
0804d9ec: mov    0xc(%eax),%eax
0804d9ef: mov    0x81a2504,%edx
0804d9f5: or     $0x2,%edx
0804d9f8: and    %edx,%eax
0804d9fa: test   %eax,%eax
0804d9fc: jne    0x000000000804da4d
0804d9fe: mov    -0x18(%ebp),%eax
0804da01: mov    0x8(%eax),%eax
0804da04: mov    %eax,-0x14(%ebp)
0804da07: mov    -0x24(%ebp),%eax
0804da0a: and    $0xfff,%eax
0804da0f: mov    %eax,-0x10(%ebp)
0804da12: mov    -0x10(%ebp),%eax
0804da15: mov    -0x14(%ebp),%edx
0804da18: or     %edx,%eax
0804da1a: mov    %eax,-0xc(%ebp)
0804da1d: mov    -0x18(%ebp),%eax
0804da20: mov    0x4(%eax),%eax
0804da23: mov    %eax,0x4(%esp)
0804da27: movl   $0x8429684,(%esp)
0804da2e: call   0x000000000804eaae
0804eaae: push   %ebp
0804eaaf: mov    %esp,%ebp
0804eab1: sub    $0x28,%esp
0804eab4: mov    0xc(%ebp),%eax
0804eab7: mov    %eax,0x4(%esp)
0804eabb: mov    0x8(%ebp),%eax
0804eabe: mov    %eax,(%esp)
0804eac1: call   0x000000000804b54e
0804b54e: push   %ebp
0804b54f: mov    %esp,%ebp
0804b551: mov    0xc(%ebp),%eax
0804b554: shr    $0xc,%eax
0804b557: pop    %ebp
0804b558: ret    
0804eac6: mov    %eax,-0xc(%ebp)
0804eac9: mov    0x8(%ebp),%eax
0804eacc: mov    (%eax),%eax
0804eace: mov    -0xc(%ebp),%edx
0804ead1: shl    $0x2,%edx
0804ead4: add    %edx,%eax
0804ead6: mov    (%eax),%eax
0804ead8: test   %eax,%eax
0804eada: jns    0x000000000804eb02
0804eb02: leave  
0804eb03: ret    
0804da33: mov    -0xc(%ebp),%eax
0804da36: movzbl (%eax),%eax
PATH COMPLETED (iteration:4, eip:0804da36, instructions:1025 time:1.286s outdir:/tmp/fuzzball-output/00000004)
Path: 100010110[00000000000000000000000000000000]1
Bit 0 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 1 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 2 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 3 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 4 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is relevant (unsat)
Bit 5 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is relevant (unsat)
Bit 6 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is relevant (unsat)
Bit 7 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is relevant (unsat)
Relevance analysis (in_mem_00208049_I5CFIXZZL44F6MIz_1_0): 0x00 vs. 0xff --> 0x0f
Bit 0 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 1 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 2 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 3 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 4 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 5 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 6 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 7 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_00208048_I5CFIXZZL44F6MAz_1_0): 0x00 vs. 0xff --> 0xff
Bit 0 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is relevant (unsat)
Bit 1 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is relevant (unsat)
Bit 2 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is relevant (unsat)
Bit 3 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is relevant (unsat)
Bit 7 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is relevant (unsat)
Relevance analysis (in_mem_0020804e_I5CFIXZZL44F6NQz_1_0): 0x40 vs. 0xcf --> 0x40
Bit 0 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Bit 2 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Relevance analysis (in_mem_0020804d_I5CFIXZZL44F6NIz_1_0): 0x96 vs. 0x93 --> 0x97
********************************************************************************

Iteration 6:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5e6: mov    0x8(%ebp),%eax
0807a5e9: mov    0xc(%eax),%eax
0807a5ec: test   %eax,%eax
0807a5ee: jne    0x000000000807a5fa
0807a5fa: mov    0x8(%ebp),%eax
0807a5fd: movzbl 0x18(%eax),%eax
0807a601: movzbl %al,%eax
0807a604: cmp    $0x5,%eax
0807a607: jg     0x000000000807a61d
0807a61d: cmp    $0x7,%eax
0807a620: jle    0x000000000807a67b
0807a67b: mov    0x8(%ebp),%eax
0807a67e: mov    0x28(%eax),%eax
0807a681: test   %eax,%eax
0807a683: je     0x000000000807a68e
0807a68e: movl   $0xffff,-0x4(%ebp)
0807a695: mov    0x8(%ebp),%eax
0807a698: mov    0x20(%eax),%eax
0807a69b: cmp    0xc(%ebp),%eax
0807a69e: jae    0x000000000807a6ba
0807a6ba: mov    $0x0,%eax
0807a6bf: jmp    0x000000000807a6c7
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db30: mov    0x8(%ebp),%eax
0804db33: mov    %eax,(%esp)
0804db36: call   0x000000000807a968
0807a968: push   %ebp
0807a969: mov    %esp,%ebp
0807a96b: cmpl   $0x2,0x8(%ebp)
0807a96f: jne    0x000000000807a978
0807a978: mov    $0xd,%eax
0807a97d: pop    %ebp
0807a97e: ret    
0804db3b: movl   $0x0,0x4(%esp)
0804db43: mov    %eax,(%esp)
0804db46: call   0x000000000806912a
0806912a: push   %ebp
At 0x0806912a, mem_70[0x818e0c8:reg32_t]:reg32_t is already concrete, hardcoding to 0xd
At 0x0806912a, simulating exit
PATH COMPLETED (iteration:5, eip:0806912a, instructions:940 time:0.158s outdir:/tmp/fuzzball-output/00000005)
Path: 1000110
Bit 0 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 1 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 2 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 3 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 4 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 5 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Bit 6 of in_mem_00208049_I5CFIXZZL44F6MIz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_00208049_I5CFIXZZL44F6MIz_1_0): 0x80 vs. 0xff --> 0xff
Bit 0 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 1 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 2 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 3 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 4 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 5 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 6 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Bit 7 of in_mem_00208048_I5CFIXZZL44F6MAz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_00208048_I5CFIXZZL44F6MAz_1_0): 0x00 vs. 0xff --> 0xff
Bit 0 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 1 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 2 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 3 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 6 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Bit 7 of in_mem_0020804e_I5CFIXZZL44F6NQz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_0020804e_I5CFIXZZL44F6NQz_1_0): 0x00 vs. 0xcf --> 0xcf
Bit 2 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is relevant (unsat)
Bit 4 of in_mem_0020804d_I5CFIXZZL44F6NIz_1_0 is irrelevant (sat)
Relevance analysis (in_mem_0020804d_I5CFIXZZL44F6NIz_1_0): 0x87 vs. 0x93 --> 0x97
********************************************************************************

Iteration 7:
08048ed4: push   %ebp
********************************************************************************
At 08048ed4, starting symbolic execution (2212 input vars)
08048ed5: mov    %esp,%ebp
08048ed7: sub    $0x18,%esp
08048eda: movzbl 0x8429681,%eax
08048ee1: test   %al,%al
08048ee3: je     0x0000000008048ef9
08048ef9: leave  
08048efa: ret    
0804a4b2: call   0x0000000008048fbb
08048fbb: push   %ebp
08048fbc: mov    %esp,%ebp
08048fbe: sub    $0x18,%esp
08048fc1: movl   $0x0,-0x10(%ebp)
08048fc8: jmp    0x0000000008049025
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
08048fca: mov    -0x10(%ebp),%edx
08048fcd: mov    %edx,%eax
08048fcf: add    %eax,%eax
08048fd1: add    %edx,%eax
08048fd3: shl    $0x4,%eax
08048fd6: add    $0x1c0,%eax
08048fdb: add    $0x819dd60,%eax
08048fe0: add    $0xc,%eax
08048fe3: mov    %eax,-0xc(%ebp)
08048fe6: mov    -0xc(%ebp),%eax
08048fe9: movzwl (%eax),%eax
08048fec: mov    %ax,-0x12(%ebp)
08048ff0: movzwl -0x12(%ebp),%eax
08048ff4: sar    $0x3,%eax
08048ff7: mov    %eax,%edx
08048ff9: mov    -0xc(%ebp),%eax
08048ffc: mov    %dx,0x2(%eax)
08049000: movzwl -0x12(%ebp),%eax
08049004: sar    $0x2,%eax
08049007: and    $0x1,%eax
0804900a: mov    %eax,%edx
0804900c: mov    -0xc(%ebp),%eax
0804900f: mov    %dl,0x4(%eax)
08049012: movzwl -0x12(%ebp),%eax
08049016: and    $0x3,%eax
08049019: mov    %eax,%edx
0804901b: mov    -0xc(%ebp),%eax
0804901e: mov    %dl,0x5(%eax)
08049021: addl   $0x1,-0x10(%ebp)
08049025: mov    $0x6,%eax
0804902a: cmp    -0x10(%ebp),%eax
0804902d: ja     0x0000000008048fca
0804902f: movl   $0x819e08c,-0xc(%ebp)
08049036: mov    -0xc(%ebp),%eax
08049039: movzwl (%eax),%eax
0804903c: mov    %ax,-0x12(%ebp)
08049040: movzwl -0x12(%ebp),%eax
08049044: sar    $0x3,%eax
08049047: mov    %eax,%edx
08049049: mov    -0xc(%ebp),%eax
0804904c: mov    %dx,0x2(%eax)
08049050: movzwl -0x12(%ebp),%eax
08049054: sar    $0x2,%eax
08049057: and    $0x1,%eax
0804905a: mov    %eax,%edx
0804905c: mov    -0xc(%ebp),%eax
0804905f: mov    %dl,0x4(%eax)
08049062: movzwl -0x12(%ebp),%eax
08049066: and    $0x3,%eax
08049069: mov    %eax,%edx
0804906b: mov    -0xc(%ebp),%eax
0804906e: mov    %dl,0x5(%eax)
08049071: movl   $0x819e05c,-0xc(%ebp)
08049078: mov    -0xc(%ebp),%eax
0804907b: movzwl (%eax),%eax
0804907e: mov    %ax,-0x12(%ebp)
08049082: movzwl -0x12(%ebp),%eax
08049086: sar    $0x3,%eax
08049089: mov    %eax,%edx
0804908b: mov    -0xc(%ebp),%eax
0804908e: mov    %dx,0x2(%eax)
08049092: movzwl -0x12(%ebp),%eax
08049096: sar    $0x2,%eax
08049099: and    $0x1,%eax
0804909c: mov    %eax,%edx
0804909e: mov    -0xc(%ebp),%eax
080490a1: mov    %dl,0x4(%eax)
080490a4: movzwl -0x12(%ebp),%eax
080490a8: and    $0x3,%eax
080490ab: mov    %eax,%edx
080490ad: mov    -0xc(%ebp),%eax
080490b0: mov    %dl,0x5(%eax)
080490b3: call   0x000000000804a5d4
0804a5d4: push   %ebp
0804a5d5: mov    %esp,%ebp
0804a5d7: mov    0x819df84,%eax
0804a5dc: mov    %eax,0x8427600
0804a5e1: movzbl 0x819df61,%eax
0804a5e8: cmp    $0x3,%al
0804a5ea: sete   %al
0804a5ed: movzbl %al,%eax
0804a5f0: mov    %eax,0x81a2504
0804a5f5: pop    %ebp
0804a5f6: ret    
080490b8: leave  
080490b9: ret    
0804a4b7: movl   $0xffffffff,0x818e0c8
At 0804a4b7, store 0818e0c8 (out_exception___4) = 0xffffffff:reg32_t
0804a4c1: call   0x0000000008048efb
08048efb: push   %ebp
At 08048efb, ignoring the first 9 path conditions
08048efc: mov    %esp,%ebp
08048efe: sub    $0x18,%esp
08048f01: movzbl 0x8429681,%eax
08048f08: test   %al,%al
08048f0a: je     0x0000000008048f20
08048f20: leave  
08048f21: ret    
0804a4c6: call   0x0000000008048ead
08048ead: push   %ebp
At 08048ead, enabling tracing
08048eae: mov    %esp,%ebp
08048eb0: sub    $0x18,%esp
08048eb3: movzbl 0x8429681,%eax
08048eba: test   %al,%al
08048ebc: je     0x0000000008048ed2
08048ed2: leave  
08048ed3: ret    
0804a4cb: movzbl 0x8429681,%eax
0804a4d2: test   %al,%al
0804a4d4: je     0x000000000804a4e2
0804a4e2: movl   $0x8427640,(%esp)
0804a4e9: call   0x0000000008049a45
08049a45: push   %ebp
08049a46: mov    %esp,%ebp
08049a48: sub    $0x18,%esp
08049a4b: mov    0x819def8,%eax
08049a50: mov    %eax,0x819df1c
08049a55: mov    0x8(%ebp),%eax
08049a58: mov    %eax,(%esp)
08049a5b: call   0x000000000804a5b4
0804a5b4: push   %ebp
0804a5b5: mov    %esp,%ebp
0804a5b7: mov    0x8(%ebp),%eax
0804a5ba: movzbl 0xe(%eax),%eax
0804a5be: movzbl %al,%eax
0804a5c1: pop    %ebp
0804a5c2: ret    
08049a60: mov    0x819def8,%edx
08049a66: add    %edx,%eax
08049a68: mov    %eax,0x819def8
08049a6d: mov    0x818e080,%eax
08049a72: test   %eax,%eax
08049a74: je     0x0000000008049ab5
08049a76: mov    0x8(%ebp),%eax
08049a79: mov    %eax,(%esp)
08049a7c: call   0x000000000804a5c4
0804a5c4: push   %ebp
0804a5c5: mov    %esp,%ebp
0804a5c7: mov    0x8(%ebp),%eax
0804a5ca: movzwl 0xc(%eax),%eax
0804a5ce: movzwl %ax,%eax
0804a5d1: pop    %ebp
0804a5d2: ret    
08049a81: movzwl %ax,%eax
08049a84: mov    %eax,(%esp)
08049a87: call   0x000000000804c56d
0804c56d: push   %ebp
0804c56e: mov    %esp,%ebp
0804c570: sub    $0x4,%esp
0804c573: mov    0x8(%ebp),%eax
0804c576: mov    %ax,-0x4(%ebp)
0804c57a: cmpw   $0x4d3,-0x4(%ebp)
0804c580: ja     0x000000000804c58f
0804c582: movzwl -0x4(%ebp),%eax
0804c586: mov    0x8190840(,%eax,4),%eax
0804c58d: jmp    0x000000000804c594
0804c594: leave  
0804c595: ret    
08049a8c: lea    0x6(%eax),%edx
08049a8f: mov    0x819dd40,%eax
08049a94: mov    %edx,0x8(%esp)
08049a98: movl   $0x81276c8,0x4(%esp)
08049aa0: mov    %eax,(%esp)
08049aa3: call   0x00000000080bcb80
080bcb80: sub    $0x1c,%esp
080bcb83: lea    0x28(%esp),%eax
080bcb87: mov    %eax,0x8(%esp)
080bcb8b: mov    0x24(%esp),%eax
080bcb8f: mov    %eax,0x4(%esp)
080bcb93: mov    0x20(%esp),%eax
080bcb97: mov    %eax,(%esp)
080bcb9a: call   0x00000000080eaf00
080eaf00: push   %ebp
080eaf01: mov    %esp,%ebp
080eaf03: push   %edi
080eaf04: push   %esi
080eaf05: push   %ebx
080eaf06: sub    $0x4fc,%esp
080eaf0c: mov    $0xffffffe8,%eax
080eaf11: mov    0x8(%ebp),%esi
080eaf14: mov    %gs:(%eax),%eax
080eaf17: mov    %eax,-0x454(%ebp)
080eaf1d: mov    0x68(%esi),%eax
080eaf20: test   %eax,%eax
080eaf22: jne    0x00000000080eb058
080eb058: cmp    $0xffffffff,%eax
080eb05b: je     0x00000000080eaf2f
080eaf2f: mov    (%esi),%eax
080eaf31: test   $0x8,%al
080eaf33: jne    0x00000000080eb1f0
080eaf39: mov    0xc(%ebp),%edx
080eaf3c: test   %edx,%edx
080eaf3e: je     0x00000000080eb20b
080eaf44: test   $0x2,%al
080eaf46: jne    0x00000000080eb068
080eaf4c: mov    0x10(%ebp),%eax
080eaf4f: mov    %eax,-0x440(%ebp)
080eaf55: movl   $0x25,0x4(%esp)
080eaf5d: mov    0xc(%ebp),%eax
080eaf60: mov    %eax,(%esp)
080eaf63: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb0d4: mov    0x8(%eax),%ecx
080cb0d7: xor    %edx,%ecx
080cb0d9: mov    $0xfefefeff,%edi
080cb0de: add    %ecx,%edi
080cb0e0: jae    0x00000000080cb139
080cb0e2: xor    %ecx,%edi
080cb0e4: or     $0xfefefeff,%edi
080cb0ea: inc    %edi
080cb0eb: jne    0x00000000080cb139
080cb139: add    $0x4,%eax
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb143: cmp    %dl,%cl
080cb145: je     0x00000000080cb15d
080cb147: inc    %eax
080cb148: test   %ch,%ch
080cb14a: je     0x00000000080cb15d
080cb14c: cmp    %dl,%ch
080cb14e: je     0x00000000080cb15d
080cb150: inc    %eax
080cb151: shr    $0x10,%ecx
080cb154: test   %cl,%cl
080cb156: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080eaf68: movl   $0x0,-0x450(%ebp)
080eaf72: mov    %eax,-0x458(%ebp)
080eaf78: mov    %eax,-0x444(%ebp)
080eaf7e: mov    (%esi),%eax
080eaf80: test   $0x80,%ah
080eaf83: jne    0x00000000080eaff4
080eaf85: mov    $0x0,%edx
080eaf8a: test   %edx,%edx
080eaf8c: je     0x00000000080eb221
080eb221: movl   $0x80facf0,-0x424(%ebp)
080eb22b: mov    %esi,-0x420(%ebp)
080eb231: jmp    0x00000000080eafb8
080eafb8: and    $0x8000,%eax
080eafbd: jne    0x00000000080eaff4
080eafbf: mov    0x48(%esi),%edx
080eafc2: mov    %gs:0x8,%ebx
080eafc9: cmp    0x8(%edx),%ebx
080eafcc: je     0x00000000080eaff0
080eafce: mov    $0x1,%ecx
080eafd3: cmpl   $0x0,%gs:0xc
080eafdb: je     0x00000000080eafde
080eafde: cmpxchg %ecx,(%edx)
080eafe1: jne    0x00000000080efabb
080eafe7: mov    0x48(%esi),%eax
080eafea: mov    0x48(%esi),%edx
080eafed: mov    %ebx,0x8(%eax)
080eaff0: addl   $0x1,0x4(%edx)
080eaff4: mov    -0x458(%ebp),%edi
080eaffa: sub    0xc(%ebp),%edi
080eaffd: mov    0x94(%esi),%eax
080eb003: mov    %edi,-0x44c(%ebp)
080eb009: mov    %edi,0x8(%esp)
080eb00d: mov    0xc(%ebp),%ecx
080eb010: mov    %esi,(%esp)
080eb013: mov    %ecx,0x4(%esp)
080eb017: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2a: movsw  %ds:(%esi),%es:(%edi)
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080eb01a: cmp    %eax,%edi
080eb01c: je     0x00000000080eb0c0
080eb0c0: mov    -0x444(%ebp),%eax
080eb0c6: cmpb   $0x0,(%eax)
080eb0c9: je     0x00000000080eb02c
080eb0cf: mov    0x842fb34,%edi
080eb0d5: test   %edi,%edi
080eb0d7: jne    0x00000000080eba46
080eb0dd: mov    0x842fb38,%ebx
080eb0e3: test   %ebx,%ebx
080eb0e5: jne    0x00000000080eba46
080eb0eb: mov    0x842fb98,%edx
080eb0f1: test   %edx,%edx
080eb0f3: jne    0x00000000080eba46
080eb0f9: movb   $0x0,-0x469(%ebp)
080eb100: movl   $0x0,-0x484(%ebp)
080eb10a: movl   $0x0,-0x490(%ebp)
080eb114: movl   $0x0,-0x47c(%ebp)
080eb11e: movl   $0xffffffff,-0x478(%ebp)
080eb128: movl   $0x0,-0x488(%ebp)
080eb132: lea    0x1(%eax),%edx
080eb135: xor    %ebx,%ebx
080eb137: mov    %edx,-0x444(%ebp)
080eb13d: movzbl 0x1(%eax),%eax
080eb141: lea    -0x18(%ebp),%edi
080eb144: movl   $0x0,-0x4ac(%ebp)
080eb14e: mov    $0x80eba2c,%edx
080eb153: movl   $0x0,-0x4a8(%ebp)
080eb15d: movl   $0x0,-0x4a0(%ebp)
080eb167: mov    %al,-0x474(%ebp)
080eb16d: sub    $0x20,%eax
080eb170: cmp    $0x5a,%al
080eb172: movl   $0x0,-0x4b0(%ebp)
080eb17c: movl   $0x0,-0x4b8(%ebp)
080eb186: movl   $0x0,-0x4a4(%ebp)
080eb190: movl   $0x0,-0x4b4(%ebp)
080eb19a: movl   $0x0,-0x49c(%ebp)
080eb1a4: movl   $0x0,-0x4bc(%ebp)
080eb1ae: movl   $0x0,-0x498(%ebp)
080eb1b8: movl   $0xffffffff,-0x494(%ebp)
080eb1c2: movl   $0x0,-0x4c0(%ebp)
080eb1cc: movb   $0x20,-0x46a(%ebp)
080eb1d3: ja     0x00000000080eb1ea
080eb1d5: movsbl -0x474(%ebp),%eax
080eb1dc: movzbl 0x81631c0(%eax),%eax
080eb1e3: mov    0x8163160(,%eax,4),%edx
080eb1ea: jmp    *%edx
080ed5a7: mov    0x10(%ebp),%eax
080ed5aa: add    $0x4,%eax
080ed5ad: mov    %eax,-0x468(%ebp)
080ed5b3: mov    0x10(%ebp),%eax
080ed5b6: mov    (%eax),%eax
080ed5b8: mov    %eax,-0x470(%ebp)
080ed5be: cmpl   $0x0,-0x470(%ebp)
080ed5c5: je     0x00000000080ed85b
080ed5cb: cmpb   $0x53,-0x474(%ebp)
080ed5d2: je     0x00000000080ed7c0
080ed5d8: cmpl   $0x0,-0x49c(%ebp)
080ed5df: jne    0x00000000080ed7c0
080ed5e5: mov    -0x494(%ebp),%eax
080ed5eb: cmp    $0xffffffff,%eax
080ed5ee: je     0x00000000080ed79c
080ed79c: mov    -0x470(%ebp),%edi
080ed7a2: xor    %eax,%eax
080ed7a4: mov    -0x494(%ebp),%ecx
080ed7aa: repnz scas %es:(%edi),%al
080ed7ac: movl   $0x0,-0x474(%ebp)
080ed7b6: not    %ecx
080ed7b8: lea    -0x1(%ecx),%edi
080ed7bb: jmp    0x00000000080ed612
080ed612: mov    -0x498(%ebp),%ecx
080ed618: sub    %edi,%ecx
080ed61a: js     0x00000000080ed751
080ed751: cmpl   $0x0,-0x44c(%ebp)
080ed758: js     0x00000000080ec289
080ed75e: mov    0x94(%esi),%eax
080ed764: mov    %edi,0x8(%esp)
080ed768: mov    -0x470(%ebp),%ecx
080ed76e: mov    %esi,(%esp)
080ed771: mov    %ecx,0x4(%esp)
080ed775: call   *0x1c(%eax)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad25: movsb  %ds:(%esi),%es:(%edi)
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ed778: cmp    %eax,%edi
080ed77a: jne    0x00000000080eb33f
080ed780: mov    -0x44c(%ebp),%edx
080ed786: mov    $0x7fffffff,%eax
080ed78b: sub    %edx,%eax
080ed78d: add    %edi,%edx
080ed78f: cmp    %eax,%edi
080ed791: jbe    0x00000000080ec1db
080ec1db: test   %ebx,%ebx
080ec1dd: jne    0x00000000080ec5b3
080ec1e3: mov    -0x444(%ebp),%eax
080ec1e9: mov    %edx,-0x44c(%ebp)
080ec1ef: lea    0x1(%eax),%ebx
080ec1f2: mov    %ebx,-0x444(%ebp)
080ec1f8: movl   $0x25,0x4(%esp)
080ec200: mov    %ebx,(%esp)
080ec203: call   0x00000000080cb000
080cb000: push   %edi
080cb001: mov    0x8(%esp),%eax
080cb005: mov    0xc(%esp),%edx
080cb009: mov    %dl,%dh
080cb00b: mov    %edx,%ecx
080cb00d: shl    $0x10,%edx
080cb010: mov    %cx,%dx
080cb013: test   $0x3,%al
080cb015: je     0x00000000080cb063
080cb063: mov    (%eax),%ecx
080cb065: xor    %edx,%ecx
080cb067: mov    $0xfefefeff,%edi
080cb06c: add    %ecx,%edi
080cb06e: jae    0x00000000080cb13f
080cb074: xor    %ecx,%edi
080cb076: or     $0xfefefeff,%edi
080cb07c: inc    %edi
080cb07d: jne    0x00000000080cb13f
080cb083: xor    %edx,%ecx
080cb085: mov    $0xfefefeff,%edi
080cb08a: add    %ecx,%edi
080cb08c: jae    0x00000000080cb13f
080cb092: xor    %ecx,%edi
080cb094: or     $0xfefefeff,%edi
080cb09a: inc    %edi
080cb09b: jne    0x00000000080cb13f
080cb0a1: mov    0x4(%eax),%ecx
080cb0a4: xor    %edx,%ecx
080cb0a6: mov    $0xfefefeff,%edi
080cb0ab: add    %ecx,%edi
080cb0ad: jae    0x00000000080cb13c
080cb0b3: xor    %ecx,%edi
080cb0b5: or     $0xfefefeff,%edi
080cb0bb: inc    %edi
080cb0bc: jne    0x00000000080cb13c
080cb0be: xor    %edx,%ecx
080cb0c0: mov    $0xfefefeff,%edi
080cb0c5: add    %ecx,%edi
080cb0c7: jae    0x00000000080cb13c
080cb0c9: xor    %ecx,%edi
080cb0cb: or     $0xfefefeff,%edi
080cb0d1: inc    %edi
080cb0d2: jne    0x00000000080cb13c
080cb13c: add    $0x4,%eax
080cb13f: test   %cl,%cl
080cb141: je     0x00000000080cb15d
080cb15d: pop    %edi
080cb15e: ret    
080ec208: mov    -0x44c(%ebp),%edx
080ec20e: test   %edx,%edx
080ec210: mov    %eax,-0x444(%ebp)
080ec216: js     0x00000000080ec58f
080ec21c: mov    0x94(%esi),%ecx
080ec222: sub    %ebx,%eax
080ec224: mov    %edx,-0x44c(%ebp)
080ec22a: mov    %ebx,0x4(%esp)
080ec22e: mov    %eax,0x8(%esp)
080ec232: mov    %esi,(%esp)
080ec235: call   *0x1c(%ecx)
080c0d10: push   %ebp
080c0d11: xor    %eax,%eax
080c0d13: push   %edi
080c0d14: push   %esi
080c0d15: push   %ebx
080c0d16: sub    $0x1c,%esp
080c0d19: mov    0x38(%esp),%ebx
080c0d1d: mov    0x30(%esp),%esi
080c0d21: mov    0x34(%esp),%edi
080c0d25: test   %ebx,%ebx
080c0d27: je     0x00000000080c0d83
080c0d29: mov    (%esi),%eax
080c0d2b: and    $0xa00,%eax
080c0d30: cmp    $0xa00,%eax
080c0d35: je     0x00000000080c0df0
080c0d3b: mov    0x18(%esi),%ecx
080c0d3e: mov    0x14(%esi),%eax
080c0d41: cmp    %eax,%ecx
080c0d43: jbe    0x00000000080c0d90
080c0d45: sub    %eax,%ecx
080c0d47: xor    %edx,%edx
080c0d49: test   %ecx,%ecx
080c0d4b: mov    %ebx,%ebp
080c0d4d: je     0x00000000080c0d79
080c0d4f: cmp    %ebx,%ecx
080c0d51: cmova  %ebx,%ecx
080c0d54: mov    %edi,0x4(%esp)
080c0d58: mov    %ecx,%ebp
080c0d5a: mov    %ecx,0x8(%esp)
080c0d5e: add    %ebp,%edi
080c0d60: mov    %eax,(%esp)
080c0d63: mov    %edx,0xc(%esp)
080c0d67: call   0x00000000080cad10
080cad10: mov    0xc(%esp),%ecx
080cad14: mov    %edi,%eax
080cad16: mov    0x4(%esp),%edi
080cad1a: mov    %esi,%edx
080cad1c: mov    0x8(%esp),%esi
080cad20: cld    
080cad21: shr    %ecx
080cad23: jae    0x00000000080cad26
080cad26: shr    %ecx
080cad28: jae    0x00000000080cad2c
080cad2c: rep movsl %ds:(%esi),%es:(%edi)
080cad2e: xchg   %eax,%edi
080cad2f: mov    %edx,%esi
080cad31: ret    
080c0d6c: mov    0xc(%esp),%edx
080c0d70: mov    %eax,0x14(%esi)
080c0d73: mov    %ebx,%eax
080c0d75: sub    %ebp,%eax
080c0d77: mov    %eax,%ebp
080c0d79: add    %ebp,%edx
080c0d7b: test   %edx,%edx
080c0d7d: jne    0x00000000080c0d9a
080c0d7f: mov    %ebx,%eax
080c0d81: sub    %ebp,%eax
080c0d83: add    $0x1c,%esp
080c0d86: pop    %ebx
080c0d87: pop    %esi
080c0d88: pop    %edi
080c0d89: pop    %ebp
080c0d8a: ret    
080ec238: mov    -0x444(%ebp),%ecx
080ec23e: mov    -0x44c(%ebp),%edx
080ec244: mov    %ecx,%edi
080ec246: sub    %ebx,%edi
080ec248: xor    %ebx,%ebx
080ec24a: cmp    %edi,%eax
080ec24c: jne    0x00000000080eb33f
080ec252: mov    $0x7fffffff,%edi
080ec257: sub    %edx,%edi
080ec259: cmp    %edi,%eax
080ec25b: jg     0x00000000080ec57e
080ec261: add    %edx,%eax
080ec263: cmpb   $0x0,(%ecx)
080ec266: mov    %eax,-0x44c(%ebp)
080ec26c: je     0x00000000080eb349
080eb349: cmpb   $0x0,-0x469(%ebp)
080eb350: je     0x00000000080eb360
080eb360: mov    -0x484(%ebp),%edi
080eb366: test   %edi,%edi
080eb368: jne    0x00000000080eb37f
080eb36a: test   %ebx,%ebx
080eb36c: je     0x00000000080eb02c
080eb02c: testl  $0x8000,(%esi)
080eb032: jne    0x00000000080eb03d
080eb034: mov    0x48(%esi),%edx
080eb037: subl   $0x1,0x4(%edx)
080eb03b: je     0x00000000080eb080
080eb080: movl   $0x0,0x8(%edx)
080eb087: cmpl   $0x0,%gs:0xc
080eb08f: je     0x00000000080eb092
080eb092: subl   $0x1,(%edx)
080eb095: jne    0x00000000080efac7
080eb09b: mov    -0x450(%ebp),%ecx
080eb0a1: test   %ecx,%ecx
080eb0a3: je     0x00000000080eb047
080eb047: mov    -0x44c(%ebp),%eax
080eb04d: lea    -0xc(%ebp),%esp
080eb050: pop    %ebx
080eb051: pop    %esi
080eb052: pop    %edi
080eb053: pop    %ebp
080eb054: ret    
080bcb9f: add    $0x1c,%esp
080bcba2: ret    
08049aa8: mov    0x819dd40,%eax
08049aad: mov    %eax,(%esp)
08049ab0: call   0x00000000080bcf30
080bcf30: push   %esi
080bcf31: push   %ebx
080bcf32: sub    $0x14,%esp
080bcf35: mov    0x20(%esp),%ebx
080bcf39: test   %ebx,%ebx
080bcf3b: je     0x00000000080bcfc8
080bcf41: mov    (%ebx),%eax
080bcf43: and    $0x8000,%eax
080bcf48: jne    0x00000000080bcf7f
080bcf4a: mov    0x48(%ebx),%edx
080bcf4d: mov    %gs:0x8,%esi
080bcf54: cmp    0x8(%edx),%esi
080bcf57: je     0x00000000080bcf7b
080bcf59: mov    $0x1,%ecx
080bcf5e: cmpl   $0x0,%gs:0xc
080bcf66: je     0x00000000080bcf69
080bcf69: cmpxchg %ecx,(%edx)
080bcf6c: jne    0x00000000080bd00b
080bcf72: mov    0x48(%ebx),%eax
080bcf75: mov    0x48(%ebx),%edx
080bcf78: mov    %esi,0x8(%eax)
080bcf7b: addl   $0x1,0x4(%edx)
080bcf7f: mov    0x94(%ebx),%eax
080bcf85: mov    %ebx,(%esp)
080bcf88: call   *0x30(%eax)
080c18b0: push   %ebx
080c18b1: sub    $0x18,%esp
080c18b4: mov    0x20(%esp),%ebx
080c18b8: mov    0x14(%ebx),%edx
080c18bb: mov    0x10(%ebx),%eax
080c18be: cmp    %eax,%edx
080c18c0: jbe    0x00000000080c18f0
080c18c2: mov    0x68(%ebx),%ecx
080c18c5: test   %ecx,%ecx
080c18c7: jle    0x00000000080c1940
080c1940: sub    %eax,%edx
080c1942: mov    %edx,0x8(%esp)
080c1946: mov    %eax,0x4(%esp)
080c194a: mov    %ebx,(%esp)
080c194d: call   0x00000000080c1020
080c1020: push   %ebx
080c1021: xor    %eax,%eax
080c1023: sub    $0x8,%esp
080c1026: mov    0x18(%esp),%ebx
080c102a: test   %ebx,%ebx
080c102c: je     0x00000000080c1047
080c102e: mov    0x14(%esp),%edx
080c1032: mov    %ebx,%ecx
080c1034: mov    0x10(%esp),%eax
080c1038: call   0x00000000080bf9c0
080bf9c0: push   %edi
080bf9c1: mov    %edx,%edi
080bf9c3: push   %esi
080bf9c4: push   %ebx
080bf9c5: mov    %eax,%ebx
080bf9c7: sub    $0x20,%esp
080bf9ca: testl  $0x1000,(%eax)
080bf9d0: je     0x00000000080bfa30
080bfa30: mov    0x8(%eax),%eax
080bfa33: mov    0x10(%ebx),%edx
080bfa36: cmp    %edx,%eax
080bfa38: je     0x00000000080bf9e0
080bf9e0: mov    0x94(%ebx),%eax
080bf9e6: mov    %ecx,0x8(%esp)
080bf9ea: mov    %edi,0x4(%esp)
080bf9ee: mov    %ebx,(%esp)
080bf9f1: call   *0x3c(%eax)
080c0800: push   %ebp
080c0801: push   %edi
080c0802: push   %esi
080c0803: push   %ebx
080c0804: sub    $0x1c,%esp
080c0807: mov    0x38(%esp),%esi
080c080b: mov    0x30(%esp),%ebp
080c080f: mov    0x34(%esp),%edi
080c0813: test   %esi,%esi
080c0815: jle    0x00000000080c0876
080c0817: mov    %esi,%ebx
080c0819: jmp    0x00000000080c0828
080c0828: testb  $0x2,0x3c(%ebp)
080c082c: mov    %ebx,0x8(%esp)
080c0830: mov    %edi,0x4(%esp)
080c0834: mov    0x38(%ebp),%eax
080c0837: mov    %eax,(%esp)
080c083a: jne    0x00000000080c087a
080c083c: call   0x00000000080db4b0
080db4b0: cmpl   $0x0,%gs:0xc
080db4b8: jne    0x00000000080db4df
080db4ba: push   %ebx
080db4bb: mov    0x10(%esp),%edx
080db4bf: mov    0xc(%esp),%ecx
080db4c3: mov    0x8(%esp),%ebx
080db4c7: mov    $0x4,%eax
080db4cc: call   *0x819d790
f7ffbd70: push   %ecx
f7ffbd71: push   %edx
f7ffbd72: push   %ebp
f7ffbd73: mov    %esp,%ebp
f7ffbd75: sysenter 
Executing ADD_EbGbM...
f7ffbd80: pop    %ebp
f7ffbd81: pop    %edx
f7ffbd82: pop    %ecx
f7ffbd83: ret    
080db4d2: pop    %ebx
080db4d3: cmp    $0xfffff001,%eax
080db4d8: jae    0x00000000080de880
080db4de: ret    
080c0841: test   %eax,%eax
080c0843: jns    0x00000000080c0820
080c0820: sub    %eax,%ebx
080c0822: add    %eax,%edi
080c0824: test   %ebx,%ebx
080c0826: jle    0x00000000080c0870
080c0870: mov    %esi,%eax
080c0872: sub    %ebx,%eax
080c0874: jmp    0x00000000080c084d
080c084d: mov    0x50(%ebp),%ebx
080c0850: mov    0x4c(%ebp),%ecx
080c0853: test   %ebx,%ebx
080c0855: js     0x00000000080c0866
080c0866: add    $0x1c,%esp
080c0869: pop    %ebx
080c086a: pop    %esi
080c086b: pop    %edi
080c086c: pop    %ebp
080c086d: ret    
080bf9f4: mov    %eax,%esi
080bf9f6: movzwl 0x44(%ebx),%eax
080bf9fa: test   %ax,%ax
080bf9fd: jne    0x00000000080bfa78
080bf9ff: mov    0x68(%ebx),%eax
080bfa02: mov    0x1c(%ebx),%edx
080bfa05: test   %eax,%eax
080bfa07: mov    %edx,0xc(%ebx)
080bfa0a: mov    %edx,0x4(%ebx)
080bfa0d: mov    %edx,0x8(%ebx)
080bfa10: mov    %edx,0x14(%ebx)
080bfa13: mov    %edx,0x10(%ebx)
080bfa16: jle    0x00000000080bfaa0
080bfaa0: testl  $0x202,(%ebx)
080bfaa6: jne    0x00000000080bfa1f
080bfaac: jmp    0x00000000080bfa1c
080bfa1c: mov    0x20(%ebx),%edx
080bfa1f: mov    %edx,0x18(%ebx)
080bfa22: mov    %esi,%eax
080bfa24: add    $0x20,%esp
080bfa27: pop    %ebx
080bfa28: pop    %esi
080bfa29: pop    %edi
080bfa2a: ret    
080c103d: cmp    %eax,%ebx
080c103f: setne  %al
080c1042: movzbl %al,%eax
080c1045: neg    %eax
080c1047: add    $0x8,%esp
080c104a: pop    %ebx
080c104b: ret    
080c1952: test   %eax,%eax
080c1954: setne  %al
080c1957: jmp    0x00000000080c18ec
080c18ec: test   %al,%al
080c18ee: jne    0x00000000080c196b
080c18f0: mov    0x4(%ebx),%eax
080c18f3: sub    0x8(%ebx),%eax
080c18f6: jne    0x00000000080c1910
080c18f8: movl   $0xffffffff,0x4c(%ebx)
080c18ff: xor    %eax,%eax
080c1901: movl   $0xffffffff,0x50(%ebx)
080c1908: add    $0x18,%esp
080c190b: pop    %ebx
080c190c: ret    
080bcf8b: xor    %edx,%edx
080bcf8d: test   %eax,%eax
080bcf8f: setne  %dl
080bcf92: neg    %edx
080bcf94: testl  $0x8000,(%ebx)
080bcf9a: jne    0x00000000080bcfc0
080bcf9c: mov    0x48(%ebx),%ecx
080bcf9f: subl   $0x1,0x4(%ecx)
080bcfa3: jne    0x00000000080bcfc0
080bcfa5: movl   $0x0,0x8(%ecx)
080bcfac: cmpl   $0x0,%gs:0xc
080bcfb4: je     0x00000000080bcfb7
080bcfb7: subl   $0x1,(%ecx)
080bcfba: jne    0x00000000080bd017
080bcfbc: lea    0x0(%esi,%eiz,1),%esi
080bcfc0: add    $0x14,%esp
080bcfc3: mov    %edx,%eax
080bcfc5: pop    %ebx
080bcfc6: pop    %esi
080bcfc7: ret    
08049ab5: mov    0x8(%ebp),%eax
08049ab8: mov    (%eax),%eax
08049aba: mov    0x8(%ebp),%edx
08049abd: mov    %edx,(%esp)
08049ac0: call   *%eax
0805e4cc: push   %ebp
0805e4cd: mov    %esp,%ebp
0805e4cf: sub    $0x28,%esp
0805e4d2: mov    0x8(%ebp),%eax
0805e4d5: mov    0x8(%eax),%eax
0805e4d8: mov    0x8(%ebp),%edx
0805e4db: mov    %edx,(%esp)
0805e4de: call   *%eax
0807a4fa: push   %ebp
0807a4fb: mov    %esp,%ebp
0807a4fd: push   %ebx
0807a4fe: sub    $0x14,%esp
0807a501: mov    0x8(%ebp),%eax
0807a504: mov    %eax,(%esp)
0807a507: call   0x000000000807a5a4
0807a5a4: push   %ebp
0807a5a5: mov    %esp,%ebp
0807a5a7: mov    0x8(%ebp),%eax
0807a5aa: movzbl 0x14(%eax),%eax
0807a5ae: movzbl %al,%eax
0807a5b1: pop    %ebp
0807a5b2: ret    
0807a50c: add    $0x5c,%eax
0807a50f: mov    0x819dd68(,%eax,4),%ebx
0807a516: mov    0x8(%ebp),%eax
0807a519: mov    %eax,(%esp)
0807a51c: call   0x000000000807a5b4
0807a5b4: push   %ebp
0807a5b5: mov    %esp,%ebp
0807a5b7: mov    0x8(%ebp),%eax
0807a5ba: mov    0x1c(%eax),%eax
0807a5bd: pop    %ebp
0807a5be: ret    
0807a521: add    %ebx,%eax
0807a523: add    $0x14,%esp
0807a526: pop    %ebx
0807a527: pop    %ebp
0807a528: ret    
0805e4e0: mov    %eax,-0xc(%ebp)
0805e4e3: mov    0x8(%ebp),%eax
0805e4e6: mov    %eax,(%esp)
0805e4e9: call   0x000000000804fc88
0804fc88: push   %ebp
0804fc89: mov    %esp,%ebp
0804fc8b: mov    0x8(%ebp),%eax
0804fc8e: movzbl 0x10(%eax),%eax
0804fc92: movzbl %al,%eax
0804fc95: pop    %ebp
0804fc96: ret    
0805e4ee: mov    -0xc(%ebp),%edx
0805e4f1: mov    %edx,0x4(%esp)
0805e4f5: mov    %eax,(%esp)
0805e4f8: call   0x000000000804d90c
0804d90c: push   %ebp
Init rand: 55a61c0 ffffcdd4 (path:)
At 0x0804d90c, concretizing mem_70[R_ESP_1:reg32_t + 8:reg32_t]:reg32_t [0xffffcdd4] to 0xfc5 (using extracond. t39_37020:reg32_t == 0xfc5:reg32_t)
0804d90d: mov    %esp,%ebp
0804d90f: sub    $0x58,%esp
0804d912: mov    0x8(%ebp),%edx
0804d915: mov    %edx,%eax
0804d917: add    %eax,%eax
0804d919: add    %edx,%eax
0804d91b: shl    $0x4,%eax
0804d91e: add    $0x1c0,%eax
0804d923: add    $0x819dd60,%eax
0804d928: add    $0xc,%eax
0804d92b: mov    %eax,-0x28(%ebp)
0804d92e: mov    0x81a2500,%eax
0804d933: cmp    $0x4,%eax
0804d936: jne    0x000000000804d977
0804d977: mov    -0x28(%ebp),%eax
0804d97a: mov    0x8(%eax),%eax
0804d97d: and    $0x4,%eax
0804d980: test   %eax,%eax
0804d982: je     0x000000000804db0d
0804db0d: movl   $0x1,0x8(%esp)
0804db15: mov    0xc(%ebp),%eax
0804db18: mov    %eax,0x4(%esp)
0804db1c: mov    -0x28(%ebp),%eax
0804db1f: mov    %eax,(%esp)
0804db22: call   0x000000000807a5cc
0807a5cc: push   %ebp
0807a5cd: mov    %esp,%ebp
0807a5cf: sub    $0x10,%esp
0807a5d2: mov    0x8(%ebp),%eax
0807a5d5: mov    0x8(%eax),%eax
0807a5d8: test   %eax,%eax
0807a5da: jne    0x000000000807a5e6
0807a5e6: mov    0x8(%ebp),%eax
0807a5e9: mov    0xc(%eax),%eax
0807a5ec: test   %eax,%eax
0807a5ee: jne    0x000000000807a5fa
0807a5fa: mov    0x8(%ebp),%eax
0807a5fd: movzbl 0x18(%eax),%eax
0807a601: movzbl %al,%eax
0807a604: cmp    $0x5,%eax
0807a607: jg     0x000000000807a61d
0807a61d: cmp    $0x7,%eax
0807a620: jle    0x000000000807a67b
0807a67b: mov    0x8(%ebp),%eax
0807a67e: mov    0x28(%eax),%eax
0807a681: test   %eax,%eax
0807a683: je     0x000000000807a68e
0807a68e: movl   $0xffff,-0x4(%ebp)
0807a695: mov    0x8(%ebp),%eax
0807a698: mov    0x20(%eax),%eax
0807a69b: cmp    0xc(%ebp),%eax
0807a69e: jae    0x000000000807a6ba
0807a6a0: mov    0xc(%ebp),%eax
0807a6a3: cmp    -0x4(%ebp),%eax
0807a6a6: ja     0x000000000807a6ba
0807a6a8: mov    0xc(%ebp),%eax
0807a6ab: mov    -0x4(%ebp),%edx
0807a6ae: sub    %eax,%edx
0807a6b0: mov    0x10(%ebp),%eax
0807a6b3: sub    $0x1,%eax
0807a6b6: cmp    %eax,%edx
0807a6b8: jae    0x000000000807a6c1
0807a6c1: nop
0807a6c2: mov    $0x1,%eax
0807a6c7: leave  
0807a6c8: ret    
0804db27: test   %eax,%eax
0804db29: sete   %al
0804db2c: test   %al,%al
0804db2e: je     0x000000000804db4b
0804db4b: jmp    0x000000000804d997
0804d997: mov    0xc(%ebp),%eax
0804d99a: mov    %eax,0x4(%esp)
0804d99e: mov    0x8(%ebp),%eax
0804d9a1: mov    %eax,(%esp)
0804d9a4: call   0x000000000804eb04
0804eb04: push   %ebp
0804eb05: mov    %esp,%ebp
0804eb07: mov    0x8(%ebp),%edx
0804eb0a: mov    %edx,%eax
0804eb0c: add    %eax,%eax
0804eb0e: add    %edx,%eax
0804eb10: shl    $0x4,%eax
0804eb13: add    $0x819df30,%eax
0804eb18: mov    0x18(%eax),%edx
0804eb1b: mov    0xc(%ebp),%eax
0804eb1e: add    %edx,%eax
0804eb20: pop    %ebp
0804eb21: ret    
0804d9a9: mov    %eax,-0x24(%ebp)
0804d9ac: mov    -0x24(%ebp),%eax
0804d9af: and    $0x3ff000,%eax
0804d9b4: shr    $0xc,%eax
0804d9b7: mov    %eax,-0x20(%ebp)
0804d9ba: mov    -0x24(%ebp),%eax
0804d9bd: and    $0xfffff000,%eax
0804d9c2: mov    %eax,-0x1c(%ebp)
0804d9c5: mov    -0x20(%ebp),%edx
0804d9c8: mov    %edx,%eax
0804d9ca: shl    $0x2,%eax
0804d9cd: add    %edx,%eax
0804d9cf: shl    $0x2,%eax
0804d9d2: add    $0x4880,%eax
0804d9d7: add    $0x819dd60,%eax
0804d9dc: mov    %eax,-0x18(%ebp)
0804d9df: mov    -0x18(%ebp),%eax
0804d9e2: mov    (%eax),%eax
0804d9e4: cmp    -0x1c(%ebp),%eax
0804d9e7: jne    0x000000000804da4d
0804d9e9: mov    -0x18(%ebp),%eax
0804d9ec: mov    0xc(%eax),%eax
0804d9ef: mov    0x81a2504,%edx
0804d9f5: or     $0x2,%edx
0804d9f8: and    %edx,%eax
0804d9fa: test   %eax,%eax
0804d9fc: jne    0x000000000804da4d
0804d9fe: mov    -0x18(%ebp),%eax
0804da01: mov    0x8(%eax),%eax
0804da04: mov    %eax,-0x14(%ebp)
0804da07: mov    -0x24(%ebp),%eax
0804da0a: and    $0xfff,%eax
0804da0f: mov    %eax,-0x10(%ebp)
0804da12: mov    -0x10(%ebp),%eax
0804da15: mov    -0x14(%ebp),%edx
0804da18: or     %edx,%eax
0804da1a: mov    %eax,-0xc(%ebp)
0804da1d: mov    -0x18(%ebp),%eax
0804da20: mov    0x4(%eax),%eax
0804da23: mov    %eax,0x4(%esp)
0804da27: movl   $0x8429684,(%esp)
0804da2e: call   0x000000000804eaae
0804eaae: push   %ebp
0804eaaf: mov    %esp,%ebp
0804eab1: sub    $0x28,%esp
0804eab4: mov    0xc(%ebp),%eax
0804eab7: mov    %eax,0x4(%esp)
0804eabb: mov    0x8(%ebp),%eax
0804eabe: mov    %eax,(%esp)
0804eac1: call   0x000000000804b54e
0804b54e: push   %ebp
0804b54f: mov    %esp,%ebp
0804b551: mov    0xc(%ebp),%eax
0804b554: shr    $0xc,%eax
0804b557: pop    %ebp
0804b558: ret    
0804eac6: mov    %eax,-0xc(%ebp)
0804eac9: mov    0x8(%ebp),%eax
0804eacc: mov    (%eax),%eax
0804eace: mov    -0xc(%ebp),%edx
0804ead1: shl    $0x2,%edx
0804ead4: add    %edx,%eax
0804ead6: mov    (%eax),%eax
0804ead8: test   %eax,%eax
0804eada: jns    0x000000000804eb02
0804eb02: leave  
0804eb03: ret    
0804da33: mov    -0xc(%ebp),%eax
0804da36: movzbl (%eax),%eax
PATH COMPLETED (iteration:6, eip:0804da36, instructions:1024 time:1.275s outdir:/tmp/fuzzball-output/00000006)
Path: 100011110[00000000000000000000000000000000]1
 break *0x8048f22
run
set logging file /tmp/tmpQ0yvaP
set logging on
print/x 0x8048e54()
set logging off
generate-core-file /tmp/tmpOKiMuB.core
['/home/yanxx297/Project/nsf-EmuVerify/tools/WhiteBochs-old/fuzzball-whitebochs', '/home/yanxx297/Project/nsf-EmuVerify/base.snap', '\\x00\\x00']
/tmp/tmpwhCHDG
gdb
done (0.164s)
gdt_limit: 224
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
/home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/extra-desc-conds.txt
Starting FuzzBall: /home/yanxx297/Project/nsf-EmuVerify/tools/emuFuzzBall/emu_fuzzball -solver z3vc -linux-syscalls -trace-iterations -zero-memory -trace-insns -paths-limit 4096 -output-dir /tmp/fuzzball-output -symbolic-byte 0x0819ded8=in_reg_EAX__4_...
################################################################################

Run completed in 6.001s
